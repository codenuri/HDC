// C 언어
// 1. data type 과 변수 개념
// 2. 연산자 - %, &&, ||, &, |
// 3. 제어문 : 조건문 2개, 반복문 3개
// 4. 배열
// 5. 함수, 지역변수, 전역변수 개념
// 6. 포인터 개념, call by value, call by pointer
//   => 포인터는 C/C++ 정도만 있고, 다른 언어는 없는 개념
// 
// 7. 문자열 표현 방법과 문자열 함수
// 8. 구조체 개념
// 다루지 못한것 : enum, union, file 입출력
// ---------------------------------------------
// C++ 언어
// 1. C보다 발전된 문법들(객체지향 관련 문법은 아니지만...) - 1일차
//  => auto, template, overloading, inline, 
//  => namespace, reference, new, nullptr

// 2. 필요한 타입을 먼저 설계하면 편리하다.
//    안전하고, 사용하기 쉬운 타입을 만들때 필요한 문법.

//  => private, public
//  => 생성자, 소멸자
// 
//  => 생성자에서 멤버를 초기화 할때는 "member initializer list" 
//     가좋다
//     Point(int a, int b) : x(a), y(b) {}

//  => static member data
//     static member function  의 특징

//  => this
//  => const member function
//  => copy constructor
//  => 파일 분할
// 
//-----------------------------------------
// 3. 여러개 사용자 타입을 잘 섞어서 하나의 프로그램을 
//    멋있게 만들어 가는 과정을 배우는 것
//    상속과 객체지향 디자인 - 오늘 오후 부터 시작!!
// ---------------------------------------------
// 4. 객체지향 문법은 아니지만, C++에서 중요한 문법
//   => 예외, 연산자 재정의(cout 만들기) - 4일차 오후
//-------------------------------------------
// 5. C++ 표준라이브러리(std::vector, std::string 등)
//    "STL" 사용법 - 5일차!
//

// C언어 : private, this, public 등의 키워드가 없습니다.
//       => C언어는 객체지향 개발 스타일을 지원하지 않습니다. 

// java, c# : class, private, public, this
//		=> 객체지향 개발 스타일을 지원하는 언어.