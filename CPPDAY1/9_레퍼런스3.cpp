int main()
{
	// 포인터와 레퍼런스
	// 유사점 : 기본 메모리(변수)를 가리킨다는 것
	// 차이점 :

	int n = 0;

	int* p1; // 초기화 되지 않거나
	int* p2 = nullptr; // 아무것도 가리키지 않을수 있다
	int* p3 = &n;      // 유효한 주소를 가진 포인터

	// p1, p2 는 잘못된 주소를 가졌습니다. * 연산하면 안됩니다
	*p1 = 10; // runtime error
	*p2 = 10; // runtime error

	int& r1; // 컴파일 에러
			 // 초기화 되지 않은 reference 는 만들수 없다.
	int& r2 = n; // ok
}
void f1(int* p)
{
	// 인자로 포인터를 받은 경우, 안전하게 하기위해
	// 꼭 0이 아닌지 확인후 사용
	if (p != nullptr) // p!= 0
	{
		*p = 10;
	}
}
void f2(int& r)
{
	// r은 거의 대부분 유효합니다.
	// 위처럼 if 를 사용하지 않고 바로 사용해도 됩니다.
	r = 10;
}
f1(0);
f2(0);
