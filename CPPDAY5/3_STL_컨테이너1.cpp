// 4_STL_컨테이너1.cpp - 213 page
#include <iostream>
#include <vector>

// stack 메모리 : 지역변수가 사용하는 메모리
// => 순차적으로 사용한다.
// => 기존 할당한 메모리의 크기 변경 불가
// => 파괴 순서도 정해져 있다.
//    할당의 역순으로 파괴.
// => 메모리 파편화가 없고 할당이 빠르다!

// heap 메모리 : malloc 또는 new
// => 할당/해지 속도가 느리다(빈공간 찾아야 한다.)
// => 메모리 파편화 발생할수 있다.
// => 빈공간을 어떻게 관리할지가 OS 만드는 사람들의
//    핵심 기술!!



int main()
{
	// 배열 : 연속된 메모리 사용, [] 접근
	//       크기 변경이 안됨, 지역변수라면 스택
	int x[5] = { 1,2,3,4,5 };
	int n = 0;

	// vector : 연속된 메모리, 
	//          v자체는 stack이지만 데이타는 힙에 보관
	//			크기 변경 가능.
	std::vector<int> v = { 1,2,3,4,5 };


	// 2. 배열과 vector는 요소 접근은 동일합니다.
	std::cout << x[0] << std::endl;
	std::cout << v[0] << std::endl;

	// 3. 하지만 vector 는 크기 변경이 가능하고
	//    다양한 멤버 함수가 있어서 편리합니다.
	v.resize(10);

	std::cout << v.size() << std::endl; // 10
}